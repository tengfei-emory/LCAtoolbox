// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// EMNewton0
Rcpp::List EMNewton0(double maxiterEM, double tolEM, arma::mat alpha, arma::vec zeta, arma::mat x, arma::vec delta, arma::vec t, arma::vec tevent, double num_class, arma::vec d, Rcpp::Function lambda_EM, Rcpp::Function loglik_EM, Rcpp::Function postweight, Rcpp::Function printplot);
RcppExport SEXP _LCAtoolbox_EMNewton0(SEXP maxiterEMSEXP, SEXP tolEMSEXP, SEXP alphaSEXP, SEXP zetaSEXP, SEXP xSEXP, SEXP deltaSEXP, SEXP tSEXP, SEXP teventSEXP, SEXP num_classSEXP, SEXP dSEXP, SEXP lambda_EMSEXP, SEXP loglik_EMSEXP, SEXP postweightSEXP, SEXP printplotSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type maxiterEM(maxiterEMSEXP);
    Rcpp::traits::input_parameter< double >::type tolEM(tolEMSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type zeta(zetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type t(tSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type tevent(teventSEXP);
    Rcpp::traits::input_parameter< double >::type num_class(num_classSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type d(dSEXP);
    Rcpp::traits::input_parameter< Rcpp::Function >::type lambda_EM(lambda_EMSEXP);
    Rcpp::traits::input_parameter< Rcpp::Function >::type loglik_EM(loglik_EMSEXP);
    Rcpp::traits::input_parameter< Rcpp::Function >::type postweight(postweightSEXP);
    Rcpp::traits::input_parameter< Rcpp::Function >::type printplot(printplotSEXP);
    rcpp_result_gen = Rcpp::wrap(EMNewton0(maxiterEM, tolEM, alpha, zeta, x, delta, t, tevent, num_class, d, lambda_EM, loglik_EM, postweight, printplot));
    return rcpp_result_gen;
END_RCPP
}
// EMNewton
Rcpp::List EMNewton(double maxiterEM, double tolEM, double maxiterNewton, double tolNewton, arma::mat alpha, arma::vec zeta, arma::mat x, arma::vec delta, arma::vec t, arma::vec tevent, double num_class, arma::vec d, arma::mat tau, Rcpp::Function lambda_EM, Rcpp::Function loglik_EM, Rcpp::Function postweight, Rcpp::Function printplot);
RcppExport SEXP _LCAtoolbox_EMNewton(SEXP maxiterEMSEXP, SEXP tolEMSEXP, SEXP maxiterNewtonSEXP, SEXP tolNewtonSEXP, SEXP alphaSEXP, SEXP zetaSEXP, SEXP xSEXP, SEXP deltaSEXP, SEXP tSEXP, SEXP teventSEXP, SEXP num_classSEXP, SEXP dSEXP, SEXP tauSEXP, SEXP lambda_EMSEXP, SEXP loglik_EMSEXP, SEXP postweightSEXP, SEXP printplotSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type maxiterEM(maxiterEMSEXP);
    Rcpp::traits::input_parameter< double >::type tolEM(tolEMSEXP);
    Rcpp::traits::input_parameter< double >::type maxiterNewton(maxiterNewtonSEXP);
    Rcpp::traits::input_parameter< double >::type tolNewton(tolNewtonSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type zeta(zetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type t(tSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type tevent(teventSEXP);
    Rcpp::traits::input_parameter< double >::type num_class(num_classSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type d(dSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< Rcpp::Function >::type lambda_EM(lambda_EMSEXP);
    Rcpp::traits::input_parameter< Rcpp::Function >::type loglik_EM(loglik_EMSEXP);
    Rcpp::traits::input_parameter< Rcpp::Function >::type postweight(postweightSEXP);
    Rcpp::traits::input_parameter< Rcpp::Function >::type printplot(printplotSEXP);
    rcpp_result_gen = Rcpp::wrap(EMNewton(maxiterEM, tolEM, maxiterNewton, tolNewton, alpha, zeta, x, delta, t, tevent, num_class, d, tau, lambda_EM, loglik_EM, postweight, printplot));
    return rcpp_result_gen;
END_RCPP
}
// LinProjCpp
arma::mat LinProjCpp(arma::cube mu, arma::cube v, arma::mat gamma, arma::mat phi, arma::vec id, arma::vec obs, arma::vec time, arma::mat y);
RcppExport SEXP _LCAtoolbox_LinProjCpp(SEXP muSEXP, SEXP vSEXP, SEXP gammaSEXP, SEXP phiSEXP, SEXP idSEXP, SEXP obsSEXP, SEXP timeSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::cube >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type v(vSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type id(idSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type obs(obsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type time(timeSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(LinProjCpp(mu, v, gamma, phi, id, obs, time, y));
    return rcpp_result_gen;
END_RCPP
}
// newton
arma::vec newton(double maxiterNewton, double tolNewton, arma::mat alpha, arma::vec zeta, arma::mat x, arma::vec delta, arma::vec t, arma::vec tevent, double num_class, arma::mat tau, Rcpp::Function lambda_EM, Rcpp::Function loglik_EM);
RcppExport SEXP _LCAtoolbox_newton(SEXP maxiterNewtonSEXP, SEXP tolNewtonSEXP, SEXP alphaSEXP, SEXP zetaSEXP, SEXP xSEXP, SEXP deltaSEXP, SEXP tSEXP, SEXP teventSEXP, SEXP num_classSEXP, SEXP tauSEXP, SEXP lambda_EMSEXP, SEXP loglik_EMSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type maxiterNewton(maxiterNewtonSEXP);
    Rcpp::traits::input_parameter< double >::type tolNewton(tolNewtonSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type zeta(zetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type t(tSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type tevent(teventSEXP);
    Rcpp::traits::input_parameter< double >::type num_class(num_classSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< Rcpp::Function >::type lambda_EM(lambda_EMSEXP);
    Rcpp::traits::input_parameter< Rcpp::Function >::type loglik_EM(loglik_EMSEXP);
    rcpp_result_gen = Rcpp::wrap(newton(maxiterNewton, tolNewton, alpha, zeta, x, delta, t, tevent, num_class, tau, lambda_EM, loglik_EM));
    return rcpp_result_gen;
END_RCPP
}
// lambda_EM
Rcpp::List lambda_EM(arma::vec zeta, arma::mat x, arma::vec t, arma::vec tevent, double num_class, arma::mat tau);
RcppExport SEXP _LCAtoolbox_lambda_EM(SEXP zetaSEXP, SEXP xSEXP, SEXP tSEXP, SEXP teventSEXP, SEXP num_classSEXP, SEXP tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type zeta(zetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type t(tSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type tevent(teventSEXP);
    Rcpp::traits::input_parameter< double >::type num_class(num_classSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type tau(tauSEXP);
    rcpp_result_gen = Rcpp::wrap(lambda_EM(zeta, x, t, tevent, num_class, tau));
    return rcpp_result_gen;
END_RCPP
}
// loglik_EM
Rcpp::List loglik_EM(arma::mat alpha, arma::vec zeta, arma::mat x, arma::vec delta, arma::vec t, arma::vec tevent, double num_class, arma::vec d, arma::mat d1, arma::cube d2, arma::mat tau);
RcppExport SEXP _LCAtoolbox_loglik_EM(SEXP alphaSEXP, SEXP zetaSEXP, SEXP xSEXP, SEXP deltaSEXP, SEXP tSEXP, SEXP teventSEXP, SEXP num_classSEXP, SEXP dSEXP, SEXP d1SEXP, SEXP d2SEXP, SEXP tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type zeta(zetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type t(tSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type tevent(teventSEXP);
    Rcpp::traits::input_parameter< double >::type num_class(num_classSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type d(dSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type d1(d1SEXP);
    Rcpp::traits::input_parameter< arma::cube >::type d2(d2SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type tau(tauSEXP);
    rcpp_result_gen = Rcpp::wrap(loglik_EM(alpha, zeta, x, delta, t, tevent, num_class, d, d1, d2, tau));
    return rcpp_result_gen;
END_RCPP
}
// numericInfo
arma::mat numericInfo(arma::mat alpha, arma::vec zeta, arma::mat x, arma::vec delta, arma::vec t, arma::vec tevent, double num_class, arma::vec l0, arma::mat tau, double epsilon, Rcpp::Function lambda_EM, Rcpp::Function loglik_EM, Rcpp::Function postweight);
RcppExport SEXP _LCAtoolbox_numericInfo(SEXP alphaSEXP, SEXP zetaSEXP, SEXP xSEXP, SEXP deltaSEXP, SEXP tSEXP, SEXP teventSEXP, SEXP num_classSEXP, SEXP l0SEXP, SEXP tauSEXP, SEXP epsilonSEXP, SEXP lambda_EMSEXP, SEXP loglik_EMSEXP, SEXP postweightSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type zeta(zetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type t(tSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type tevent(teventSEXP);
    Rcpp::traits::input_parameter< double >::type num_class(num_classSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type l0(l0SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< double >::type epsilon(epsilonSEXP);
    Rcpp::traits::input_parameter< Rcpp::Function >::type lambda_EM(lambda_EMSEXP);
    Rcpp::traits::input_parameter< Rcpp::Function >::type loglik_EM(loglik_EMSEXP);
    Rcpp::traits::input_parameter< Rcpp::Function >::type postweight(postweightSEXP);
    rcpp_result_gen = Rcpp::wrap(numericInfo(alpha, zeta, x, delta, t, tevent, num_class, l0, tau, epsilon, lambda_EM, loglik_EM, postweight));
    return rcpp_result_gen;
END_RCPP
}
// postweight
Rcpp::List postweight(arma::mat alpha, arma::vec zeta, arma::mat x, arma::vec delta, arma::vec t, arma::vec tevent, double num_class, arma::vec d);
RcppExport SEXP _LCAtoolbox_postweight(SEXP alphaSEXP, SEXP zetaSEXP, SEXP xSEXP, SEXP deltaSEXP, SEXP tSEXP, SEXP teventSEXP, SEXP num_classSEXP, SEXP dSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type zeta(zetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type t(tSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type tevent(teventSEXP);
    Rcpp::traits::input_parameter< double >::type num_class(num_classSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type d(dSEXP);
    rcpp_result_gen = Rcpp::wrap(postweight(alpha, zeta, x, delta, t, tevent, num_class, d));
    return rcpp_result_gen;
END_RCPP
}
// varestcpp
Rcpp::List varestcpp(arma::vec zeta, arma::vec delta, arma::vec chaz, arma::mat tau, arma::mat p, arma::mat x, arma::vec tevent);
RcppExport SEXP _LCAtoolbox_varestcpp(SEXP zetaSEXP, SEXP deltaSEXP, SEXP chazSEXP, SEXP tauSEXP, SEXP pSEXP, SEXP xSEXP, SEXP teventSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type zeta(zetaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type chaz(chazSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type p(pSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type tevent(teventSEXP);
    rcpp_result_gen = Rcpp::wrap(varestcpp(zeta, delta, chaz, tau, p, x, tevent));
    return rcpp_result_gen;
END_RCPP
}
// varestcpp_sltca
Rcpp::List varestcpp_sltca(arma::vec t0, arma::mat x, arma::mat y, arma::mat tau, arma::mat p, Rcpp::StringVector Y_dist, arma::vec id, arma::cube mu, double lbeta, arma::mat covgee, arma::mat phi, arma::mat gamma);
RcppExport SEXP _LCAtoolbox_varestcpp_sltca(SEXP t0SEXP, SEXP xSEXP, SEXP ySEXP, SEXP tauSEXP, SEXP pSEXP, SEXP Y_distSEXP, SEXP idSEXP, SEXP muSEXP, SEXP lbetaSEXP, SEXP covgeeSEXP, SEXP phiSEXP, SEXP gammaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type t0(t0SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type p(pSEXP);
    Rcpp::traits::input_parameter< Rcpp::StringVector >::type Y_dist(Y_distSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type id(idSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type lbeta(lbetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type covgee(covgeeSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type gamma(gammaSEXP);
    rcpp_result_gen = Rcpp::wrap(varestcpp_sltca(t0, x, y, tau, p, Y_dist, id, mu, lbeta, covgee, phi, gamma));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_LCAtoolbox_EMNewton0", (DL_FUNC) &_LCAtoolbox_EMNewton0, 14},
    {"_LCAtoolbox_EMNewton", (DL_FUNC) &_LCAtoolbox_EMNewton, 17},
    {"_LCAtoolbox_LinProjCpp", (DL_FUNC) &_LCAtoolbox_LinProjCpp, 8},
    {"_LCAtoolbox_newton", (DL_FUNC) &_LCAtoolbox_newton, 12},
    {"_LCAtoolbox_lambda_EM", (DL_FUNC) &_LCAtoolbox_lambda_EM, 6},
    {"_LCAtoolbox_loglik_EM", (DL_FUNC) &_LCAtoolbox_loglik_EM, 11},
    {"_LCAtoolbox_numericInfo", (DL_FUNC) &_LCAtoolbox_numericInfo, 13},
    {"_LCAtoolbox_postweight", (DL_FUNC) &_LCAtoolbox_postweight, 8},
    {"_LCAtoolbox_varestcpp", (DL_FUNC) &_LCAtoolbox_varestcpp, 7},
    {"_LCAtoolbox_varestcpp_sltca", (DL_FUNC) &_LCAtoolbox_varestcpp_sltca, 12},
    {NULL, NULL, 0}
};

RcppExport void R_init_LCAtoolbox(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
